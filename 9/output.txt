
Enter size of input array: 15


MENU

1. Enter elements in array
2. Sort
3. Display array
4. Exit

Enter your choice: 1
Enter element 1: 15
Enter element 2: 14
Enter element 3: 13
Enter element 4: 12
Enter element 5: 11
Enter element 6: 10
Enter element 7: 9
Enter element 8: 8
Enter element 9: 7
Enter element 10: 6
Enter element 11: 5
Enter element 12: 4
Enter element 13: 3
Enter element 14: 2
Enter element 15: 1

Array is:

 - 15 - 14 - 13 - 12 - 11 - 10 - 9 - 8 - 7 - 6 - 5 - 4 - 3 - 2 - 1

MENU

1. Enter elements in array
2. Sort
3. Display array
4. Exit

Enter your choice: 2

Before sorting...

Array is:

 - 15 - 14 - 13 - 12 - 11 - 10 - 9 - 8 - 7 - 6 - 5 - 4 - 3 - 2 - 1

Currently at node: 9
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 10
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 11
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 12
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 13
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 14
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 15
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (15) and last element (1) of array...

Discarding last element (15) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 14

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 14 - 13 - 12 - 11 - 10 - 9 - 8 - 7 - 6 - 5 - 4 - 3 - 2 - 15

After swapping...

Array is:

 - 14 - 1 - 13 - 12 - 11 - 10 - 9 - 8 - 7 - 6 - 5 - 4 - 3 - 2 - 15

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 12

Root is not the Largest in array

Before swapping...

Array is:

 - 14 - 1 - 13 - 12 - 11 - 10 - 9 - 8 - 7 - 6 - 5 - 4 - 3 - 2 - 15

After swapping...

Array is:

 - 14 - 12 - 13 - 1 - 11 - 10 - 9 - 8 - 7 - 6 - 5 - 4 - 3 - 2 - 15

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 8

Root is not the Largest in array

Before swapping...

Array is:

 - 14 - 12 - 13 - 1 - 11 - 10 - 9 - 8 - 7 - 6 - 5 - 4 - 3 - 2 - 15

After swapping...

Array is:

 - 14 - 12 - 13 - 8 - 11 - 10 - 9 - 1 - 7 - 6 - 5 - 4 - 3 - 2 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (14) and last element (2) of array...

Discarding last element (14) form heap...

Heapifying reduced array...


Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 12Right Child > Current Node
Right Child: 13

Root is not the Largest in array

Before swapping...

Array is:

 - 2 - 12 - 13 - 8 - 11 - 10 - 9 - 1 - 7 - 6 - 5 - 4 - 3 - 14 - 15

After swapping...

Array is:

 - 13 - 12 - 2 - 8 - 11 - 10 - 9 - 1 - 7 - 6 - 5 - 4 - 3 - 14 - 15

Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 10

Root is not the Largest in array

Before swapping...

Array is:

 - 13 - 12 - 2 - 8 - 11 - 10 - 9 - 1 - 7 - 6 - 5 - 4 - 3 - 14 - 15

After swapping...

Array is:

 - 13 - 12 - 10 - 8 - 11 - 2 - 9 - 1 - 7 - 6 - 5 - 4 - 3 - 14 - 15

Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 4

Root is not the Largest in array

Before swapping...

Array is:

 - 13 - 12 - 10 - 8 - 11 - 2 - 9 - 1 - 7 - 6 - 5 - 4 - 3 - 14 - 15

After swapping...

Array is:

 - 13 - 12 - 10 - 8 - 11 - 4 - 9 - 1 - 7 - 6 - 5 - 2 - 3 - 14 - 15

Currently at node: 2
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (13) and last element (3) of array...

Discarding last element (13) form heap...

Heapifying reduced array...


Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 12

Root is not the Largest in array

Before swapping...

Array is:

 - 3 - 12 - 10 - 8 - 11 - 4 - 9 - 1 - 7 - 6 - 5 - 2 - 13 - 14 - 15

After swapping...

Array is:

 - 12 - 3 - 10 - 8 - 11 - 4 - 9 - 1 - 7 - 6 - 5 - 2 - 13 - 14 - 15

Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 8Right Child > Current Node
Right Child: 11

Root is not the Largest in array

Before swapping...

Array is:

 - 12 - 3 - 10 - 8 - 11 - 4 - 9 - 1 - 7 - 6 - 5 - 2 - 13 - 14 - 15

After swapping...

Array is:

 - 12 - 11 - 10 - 8 - 3 - 4 - 9 - 1 - 7 - 6 - 5 - 2 - 13 - 14 - 15

Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 6

Root is not the Largest in array

Before swapping...

Array is:

 - 12 - 11 - 10 - 8 - 3 - 4 - 9 - 1 - 7 - 6 - 5 - 2 - 13 - 14 - 15

After swapping...

Array is:

 - 12 - 11 - 10 - 8 - 6 - 4 - 9 - 1 - 7 - 3 - 5 - 2 - 13 - 14 - 15

Currently at node: 3
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (12) and last element (2) of array...

Discarding last element (12) form heap...

Heapifying reduced array...


Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 11

Root is not the Largest in array

Before swapping...

Array is:

 - 2 - 11 - 10 - 8 - 6 - 4 - 9 - 1 - 7 - 3 - 5 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 11 - 2 - 10 - 8 - 6 - 4 - 9 - 1 - 7 - 3 - 5 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 8

Root is not the Largest in array

Before swapping...

Array is:

 - 11 - 2 - 10 - 8 - 6 - 4 - 9 - 1 - 7 - 3 - 5 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 11 - 8 - 10 - 2 - 6 - 4 - 9 - 1 - 7 - 3 - 5 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children
Right Child > Current Node
Right Child: 7

Root is not the Largest in array

Before swapping...

Array is:

 - 11 - 8 - 10 - 2 - 6 - 4 - 9 - 1 - 7 - 3 - 5 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 11 - 8 - 10 - 7 - 6 - 4 - 9 - 1 - 2 - 3 - 5 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (11) and last element (5) of array...

Discarding last element (11) form heap...

Heapifying reduced array...


Currently at node: 5
Comparing current node with left and right children
Left Child > Current Node
Left Child: 8Right Child > Current Node
Right Child: 10

Root is not the Largest in array

Before swapping...

Array is:

 - 5 - 8 - 10 - 7 - 6 - 4 - 9 - 1 - 2 - 3 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 10 - 8 - 5 - 7 - 6 - 4 - 9 - 1 - 2 - 3 - 11 - 12 - 13 - 14 - 15

Currently at node: 5
Comparing current node with left and right children
Right Child > Current Node
Right Child: 9

Root is not the Largest in array

Before swapping...

Array is:

 - 10 - 8 - 5 - 7 - 6 - 4 - 9 - 1 - 2 - 3 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 10 - 8 - 9 - 7 - 6 - 4 - 5 - 1 - 2 - 3 - 11 - 12 - 13 - 14 - 15

Currently at node: 5
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (10) and last element (3) of array...

Discarding last element (10) form heap...

Heapifying reduced array...


Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 8Right Child > Current Node
Right Child: 9

Root is not the Largest in array

Before swapping...

Array is:

 - 3 - 8 - 9 - 7 - 6 - 4 - 5 - 1 - 2 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 9 - 8 - 3 - 7 - 6 - 4 - 5 - 1 - 2 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 4Right Child > Current Node
Right Child: 5

Root is not the Largest in array

Before swapping...

Array is:

 - 9 - 8 - 3 - 7 - 6 - 4 - 5 - 1 - 2 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 9 - 8 - 5 - 7 - 6 - 4 - 3 - 1 - 2 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 3
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (9) and last element (2) of array...

Discarding last element (9) form heap...

Heapifying reduced array...


Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 8

Root is not the Largest in array

Before swapping...

Array is:

 - 2 - 8 - 5 - 7 - 6 - 4 - 3 - 1 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 8 - 2 - 5 - 7 - 6 - 4 - 3 - 1 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 7

Root is not the Largest in array

Before swapping...

Array is:

 - 8 - 2 - 5 - 7 - 6 - 4 - 3 - 1 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 8 - 7 - 5 - 2 - 6 - 4 - 3 - 1 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (8) and last element (1) of array...

Discarding last element (8) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 7

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 7 - 5 - 2 - 6 - 4 - 3 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 7 - 1 - 5 - 2 - 6 - 4 - 3 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 2Right Child > Current Node
Right Child: 6

Root is not the Largest in array

Before swapping...

Array is:

 - 7 - 1 - 5 - 2 - 6 - 4 - 3 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 7 - 6 - 5 - 2 - 1 - 4 - 3 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (7) and last element (3) of array...

Discarding last element (7) form heap...

Heapifying reduced array...


Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 6

Root is not the Largest in array

Before swapping...

Array is:

 - 3 - 6 - 5 - 2 - 1 - 4 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 6 - 3 - 5 - 2 - 1 - 4 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 3
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (6) and last element (4) of array...

Discarding last element (6) form heap...

Heapifying reduced array...


Currently at node: 4
Comparing current node with left and right children
Right Child > Current Node
Right Child: 5

Root is not the Largest in array

Before swapping...

Array is:

 - 4 - 3 - 5 - 2 - 1 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 5 - 3 - 4 - 2 - 1 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 4
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (5) and last element (1) of array...

Discarding last element (5) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 3Right Child > Current Node
Right Child: 4

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 3 - 4 - 2 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 4 - 3 - 1 - 2 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (4) and last element (2) of array...

Discarding last element (4) form heap...

Heapifying reduced array...


Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 3

Root is not the Largest in array

Before swapping...

Array is:

 - 2 - 3 - 1 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 3 - 2 - 1 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (3) and last element (1) of array...

Discarding last element (3) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 2

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 2 - 1 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (2) and last element (1) of array...

Discarding last element (2) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node


After sorting...

Array is:

 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

MENU

1. Enter elements in array
2. Sort
3. Display array
4. Exit

Enter your choice: 1
Enter element 1: 15
Enter element 2: 3
Enter element 3: 4
Enter element 4: 2
Enter element 5: 7
Enter element 6: 13
Enter element 7: 12
Enter element 8: 11
Enter element 9: 8
Enter element 10: 5
Enter element 11: 6
Enter element 12: 10
Enter element 13: 9
Enter element 14: 1
Enter element 15: 14

Array is:

 - 15 - 3 - 4 - 2 - 7 - 13 - 12 - 11 - 8 - 5 - 6 - 10 - 9 - 1 - 14

MENU

1. Enter elements in array
2. Sort
3. Display array
4. Exit

Enter your choice: 2

Before sorting...

Array is:

 - 15 - 3 - 4 - 2 - 7 - 13 - 12 - 11 - 8 - 5 - 6 - 10 - 9 - 1 - 14

Currently at node: 12
Comparing current node with left and right children
Right Child > Current Node
Right Child: 14

Root is not the Largest in array

Before swapping...

Array is:

 - 15 - 3 - 4 - 2 - 7 - 13 - 12 - 11 - 8 - 5 - 6 - 10 - 9 - 1 - 14

After swapping...

Array is:

 - 15 - 3 - 4 - 2 - 7 - 13 - 14 - 11 - 8 - 5 - 6 - 10 - 9 - 1 - 12

Currently at node: 12
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 13
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 7
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 11

Root is not the Largest in array

Before swapping...

Array is:

 - 15 - 3 - 4 - 2 - 7 - 13 - 14 - 11 - 8 - 5 - 6 - 10 - 9 - 1 - 12

After swapping...

Array is:

 - 15 - 3 - 4 - 11 - 7 - 13 - 14 - 2 - 8 - 5 - 6 - 10 - 9 - 1 - 12

Currently at node: 2
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 4
Comparing current node with left and right children
Left Child > Current Node
Left Child: 13Right Child > Current Node
Right Child: 14

Root is not the Largest in array

Before swapping...

Array is:

 - 15 - 3 - 4 - 11 - 7 - 13 - 14 - 2 - 8 - 5 - 6 - 10 - 9 - 1 - 12

After swapping...

Array is:

 - 15 - 3 - 14 - 11 - 7 - 13 - 4 - 2 - 8 - 5 - 6 - 10 - 9 - 1 - 12

Currently at node: 4
Comparing current node with left and right children
Right Child > Current Node
Right Child: 12

Root is not the Largest in array

Before swapping...

Array is:

 - 15 - 3 - 14 - 11 - 7 - 13 - 4 - 2 - 8 - 5 - 6 - 10 - 9 - 1 - 12

After swapping...

Array is:

 - 15 - 3 - 14 - 11 - 7 - 13 - 12 - 2 - 8 - 5 - 6 - 10 - 9 - 1 - 4

Currently at node: 4
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 11

Root is not the Largest in array

Before swapping...

Array is:

 - 15 - 3 - 14 - 11 - 7 - 13 - 12 - 2 - 8 - 5 - 6 - 10 - 9 - 1 - 4

After swapping...

Array is:

 - 15 - 11 - 14 - 3 - 7 - 13 - 12 - 2 - 8 - 5 - 6 - 10 - 9 - 1 - 4

Currently at node: 3
Comparing current node with left and right children
Right Child > Current Node
Right Child: 8

Root is not the Largest in array

Before swapping...

Array is:

 - 15 - 11 - 14 - 3 - 7 - 13 - 12 - 2 - 8 - 5 - 6 - 10 - 9 - 1 - 4

After swapping...

Array is:

 - 15 - 11 - 14 - 8 - 7 - 13 - 12 - 2 - 3 - 5 - 6 - 10 - 9 - 1 - 4

Currently at node: 3
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 15
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (15) and last element (4) of array...

Discarding last element (15) form heap...

Heapifying reduced array...


Currently at node: 4
Comparing current node with left and right children
Left Child > Current Node
Left Child: 11Right Child > Current Node
Right Child: 14

Root is not the Largest in array

Before swapping...

Array is:

 - 4 - 11 - 14 - 8 - 7 - 13 - 12 - 2 - 3 - 5 - 6 - 10 - 9 - 1 - 15

After swapping...

Array is:

 - 14 - 11 - 4 - 8 - 7 - 13 - 12 - 2 - 3 - 5 - 6 - 10 - 9 - 1 - 15

Currently at node: 4
Comparing current node with left and right children
Left Child > Current Node
Left Child: 13

Root is not the Largest in array

Before swapping...

Array is:

 - 14 - 11 - 4 - 8 - 7 - 13 - 12 - 2 - 3 - 5 - 6 - 10 - 9 - 1 - 15

After swapping...

Array is:

 - 14 - 11 - 13 - 8 - 7 - 4 - 12 - 2 - 3 - 5 - 6 - 10 - 9 - 1 - 15

Currently at node: 4
Comparing current node with left and right children
Left Child > Current Node
Left Child: 10

Root is not the Largest in array

Before swapping...

Array is:

 - 14 - 11 - 13 - 8 - 7 - 4 - 12 - 2 - 3 - 5 - 6 - 10 - 9 - 1 - 15

After swapping...

Array is:

 - 14 - 11 - 13 - 8 - 7 - 10 - 12 - 2 - 3 - 5 - 6 - 4 - 9 - 1 - 15

Currently at node: 4
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (14) and last element (1) of array...

Discarding last element (14) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 11Right Child > Current Node
Right Child: 13

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 11 - 13 - 8 - 7 - 10 - 12 - 2 - 3 - 5 - 6 - 4 - 9 - 14 - 15

After swapping...

Array is:

 - 13 - 11 - 1 - 8 - 7 - 10 - 12 - 2 - 3 - 5 - 6 - 4 - 9 - 14 - 15

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 10Right Child > Current Node
Right Child: 12

Root is not the Largest in array

Before swapping...

Array is:

 - 13 - 11 - 1 - 8 - 7 - 10 - 12 - 2 - 3 - 5 - 6 - 4 - 9 - 14 - 15

After swapping...

Array is:

 - 13 - 11 - 12 - 8 - 7 - 10 - 1 - 2 - 3 - 5 - 6 - 4 - 9 - 14 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (13) and last element (9) of array...

Discarding last element (13) form heap...

Heapifying reduced array...


Currently at node: 9
Comparing current node with left and right children
Left Child > Current Node
Left Child: 11Right Child > Current Node
Right Child: 12

Root is not the Largest in array

Before swapping...

Array is:

 - 9 - 11 - 12 - 8 - 7 - 10 - 1 - 2 - 3 - 5 - 6 - 4 - 13 - 14 - 15

After swapping...

Array is:

 - 12 - 11 - 9 - 8 - 7 - 10 - 1 - 2 - 3 - 5 - 6 - 4 - 13 - 14 - 15

Currently at node: 9
Comparing current node with left and right children
Left Child > Current Node
Left Child: 10

Root is not the Largest in array

Before swapping...

Array is:

 - 12 - 11 - 9 - 8 - 7 - 10 - 1 - 2 - 3 - 5 - 6 - 4 - 13 - 14 - 15

After swapping...

Array is:

 - 12 - 11 - 10 - 8 - 7 - 9 - 1 - 2 - 3 - 5 - 6 - 4 - 13 - 14 - 15

Currently at node: 9
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (12) and last element (4) of array...

Discarding last element (12) form heap...

Heapifying reduced array...


Currently at node: 4
Comparing current node with left and right children
Left Child > Current Node
Left Child: 11

Root is not the Largest in array

Before swapping...

Array is:

 - 4 - 11 - 10 - 8 - 7 - 9 - 1 - 2 - 3 - 5 - 6 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 11 - 4 - 10 - 8 - 7 - 9 - 1 - 2 - 3 - 5 - 6 - 12 - 13 - 14 - 15

Currently at node: 4
Comparing current node with left and right children
Left Child > Current Node
Left Child: 8

Root is not the Largest in array

Before swapping...

Array is:

 - 11 - 4 - 10 - 8 - 7 - 9 - 1 - 2 - 3 - 5 - 6 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 11 - 8 - 10 - 4 - 7 - 9 - 1 - 2 - 3 - 5 - 6 - 12 - 13 - 14 - 15

Currently at node: 4
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (11) and last element (6) of array...

Discarding last element (11) form heap...

Heapifying reduced array...


Currently at node: 6
Comparing current node with left and right children
Left Child > Current Node
Left Child: 8Right Child > Current Node
Right Child: 10

Root is not the Largest in array

Before swapping...

Array is:

 - 6 - 8 - 10 - 4 - 7 - 9 - 1 - 2 - 3 - 5 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 10 - 8 - 6 - 4 - 7 - 9 - 1 - 2 - 3 - 5 - 11 - 12 - 13 - 14 - 15

Currently at node: 6
Comparing current node with left and right children
Left Child > Current Node
Left Child: 9

Root is not the Largest in array

Before swapping...

Array is:

 - 10 - 8 - 6 - 4 - 7 - 9 - 1 - 2 - 3 - 5 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 10 - 8 - 9 - 4 - 7 - 6 - 1 - 2 - 3 - 5 - 11 - 12 - 13 - 14 - 15

Currently at node: 6
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (10) and last element (5) of array...

Discarding last element (10) form heap...

Heapifying reduced array...


Currently at node: 5
Comparing current node with left and right children
Left Child > Current Node
Left Child: 8Right Child > Current Node
Right Child: 9

Root is not the Largest in array

Before swapping...

Array is:

 - 5 - 8 - 9 - 4 - 7 - 6 - 1 - 2 - 3 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 9 - 8 - 5 - 4 - 7 - 6 - 1 - 2 - 3 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 5
Comparing current node with left and right children
Left Child > Current Node
Left Child: 6

Root is not the Largest in array

Before swapping...

Array is:

 - 9 - 8 - 5 - 4 - 7 - 6 - 1 - 2 - 3 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 9 - 8 - 6 - 4 - 7 - 5 - 1 - 2 - 3 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 5
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (9) and last element (3) of array...

Discarding last element (9) form heap...

Heapifying reduced array...


Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 8

Root is not the Largest in array

Before swapping...

Array is:

 - 3 - 8 - 6 - 4 - 7 - 5 - 1 - 2 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 8 - 3 - 6 - 4 - 7 - 5 - 1 - 2 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 4Right Child > Current Node
Right Child: 7

Root is not the Largest in array

Before swapping...

Array is:

 - 8 - 3 - 6 - 4 - 7 - 5 - 1 - 2 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 8 - 7 - 6 - 4 - 3 - 5 - 1 - 2 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 3
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (8) and last element (2) of array...

Discarding last element (8) form heap...

Heapifying reduced array...


Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 7

Root is not the Largest in array

Before swapping...

Array is:

 - 2 - 7 - 6 - 4 - 3 - 5 - 1 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 7 - 2 - 6 - 4 - 3 - 5 - 1 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 4

Root is not the Largest in array

Before swapping...

Array is:

 - 7 - 2 - 6 - 4 - 3 - 5 - 1 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 7 - 4 - 6 - 2 - 3 - 5 - 1 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (7) and last element (1) of array...

Discarding last element (7) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 4Right Child > Current Node
Right Child: 6

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 4 - 6 - 2 - 3 - 5 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 6 - 4 - 1 - 2 - 3 - 5 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 5

Root is not the Largest in array

Before swapping...

Array is:

 - 6 - 4 - 1 - 2 - 3 - 5 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 6 - 4 - 5 - 2 - 3 - 1 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (6) and last element (1) of array...

Discarding last element (6) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 4Right Child > Current Node
Right Child: 5

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 4 - 5 - 2 - 3 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 5 - 4 - 1 - 2 - 3 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (5) and last element (3) of array...

Discarding last element (5) form heap...

Heapifying reduced array...


Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 4

Root is not the Largest in array

Before swapping...

Array is:

 - 3 - 4 - 1 - 2 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 4 - 3 - 1 - 2 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 3
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (4) and last element (2) of array...

Discarding last element (4) form heap...

Heapifying reduced array...


Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 3

Root is not the Largest in array

Before swapping...

Array is:

 - 2 - 3 - 1 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 3 - 2 - 1 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (3) and last element (1) of array...

Discarding last element (3) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 2

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 2 - 1 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (2) and last element (1) of array...

Discarding last element (2) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node


After sorting...

Array is:

 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

MENU

1. Enter elements in array
2. Sort
3. Display array
4. Exit

Enter your choice: 1
Enter element 1: 1
Enter element 2: 2
Enter element 3: 3
Enter element 4: 4
Enter element 5: 5
Enter element 6: 6
Enter element 7: 7
Enter element 8: 8
Enter element 9: 9
Enter element 10: 1
Enter element 11: 11
Enter element 12: 12
Enter element 13: 13
Enter element 14: 14
Enter element 15: 15

Array is:

 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 1 - 11 - 12 - 13 - 14 - 15

MENU

1. Enter elements in array
2. Sort
3. Display array
4. Exit

Enter your choice: 2

Before sorting...

Array is:

 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 1 - 11 - 12 - 13 - 14 - 15

Currently at node: 7
Comparing current node with left and right children
Left Child > Current Node
Left Child: 14Right Child > Current Node
Right Child: 15

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 1 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 1 - 2 - 3 - 4 - 5 - 6 - 15 - 8 - 9 - 1 - 11 - 12 - 13 - 14 - 7

Currently at node: 7
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 6
Comparing current node with left and right children
Left Child > Current Node
Left Child: 12Right Child > Current Node
Right Child: 13

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 2 - 3 - 4 - 5 - 6 - 15 - 8 - 9 - 1 - 11 - 12 - 13 - 14 - 7

After swapping...

Array is:

 - 1 - 2 - 3 - 4 - 5 - 13 - 15 - 8 - 9 - 1 - 11 - 12 - 6 - 14 - 7

Currently at node: 6
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 5
Comparing current node with left and right children
Right Child > Current Node
Right Child: 11

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 2 - 3 - 4 - 5 - 13 - 15 - 8 - 9 - 1 - 11 - 12 - 6 - 14 - 7

After swapping...

Array is:

 - 1 - 2 - 3 - 4 - 11 - 13 - 15 - 8 - 9 - 1 - 5 - 12 - 6 - 14 - 7

Currently at node: 5
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 4
Comparing current node with left and right children
Left Child > Current Node
Left Child: 8Right Child > Current Node
Right Child: 9

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 2 - 3 - 4 - 11 - 13 - 15 - 8 - 9 - 1 - 5 - 12 - 6 - 14 - 7

After swapping...

Array is:

 - 1 - 2 - 3 - 9 - 11 - 13 - 15 - 8 - 4 - 1 - 5 - 12 - 6 - 14 - 7

Currently at node: 4
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 13Right Child > Current Node
Right Child: 15

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 2 - 3 - 9 - 11 - 13 - 15 - 8 - 4 - 1 - 5 - 12 - 6 - 14 - 7

After swapping...

Array is:

 - 1 - 2 - 15 - 9 - 11 - 13 - 3 - 8 - 4 - 1 - 5 - 12 - 6 - 14 - 7

Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 14

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 2 - 15 - 9 - 11 - 13 - 3 - 8 - 4 - 1 - 5 - 12 - 6 - 14 - 7

After swapping...

Array is:

 - 1 - 2 - 15 - 9 - 11 - 13 - 14 - 8 - 4 - 1 - 5 - 12 - 6 - 3 - 7

Currently at node: 3
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 9Right Child > Current Node
Right Child: 11

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 2 - 15 - 9 - 11 - 13 - 14 - 8 - 4 - 1 - 5 - 12 - 6 - 3 - 7

After swapping...

Array is:

 - 1 - 11 - 15 - 9 - 2 - 13 - 14 - 8 - 4 - 1 - 5 - 12 - 6 - 3 - 7

Currently at node: 2
Comparing current node with left and right children
Right Child > Current Node
Right Child: 5

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 11 - 15 - 9 - 2 - 13 - 14 - 8 - 4 - 1 - 5 - 12 - 6 - 3 - 7

After swapping...

Array is:

 - 1 - 11 - 15 - 9 - 5 - 13 - 14 - 8 - 4 - 1 - 2 - 12 - 6 - 3 - 7

Currently at node: 2
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 11Right Child > Current Node
Right Child: 15

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 11 - 15 - 9 - 5 - 13 - 14 - 8 - 4 - 1 - 2 - 12 - 6 - 3 - 7

After swapping...

Array is:

 - 15 - 11 - 1 - 9 - 5 - 13 - 14 - 8 - 4 - 1 - 2 - 12 - 6 - 3 - 7

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 13Right Child > Current Node
Right Child: 14

Root is not the Largest in array

Before swapping...

Array is:

 - 15 - 11 - 1 - 9 - 5 - 13 - 14 - 8 - 4 - 1 - 2 - 12 - 6 - 3 - 7

After swapping...

Array is:

 - 15 - 11 - 14 - 9 - 5 - 13 - 1 - 8 - 4 - 1 - 2 - 12 - 6 - 3 - 7

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 3Right Child > Current Node
Right Child: 7

Root is not the Largest in array

Before swapping...

Array is:

 - 15 - 11 - 14 - 9 - 5 - 13 - 1 - 8 - 4 - 1 - 2 - 12 - 6 - 3 - 7

After swapping...

Array is:

 - 15 - 11 - 14 - 9 - 5 - 13 - 7 - 8 - 4 - 1 - 2 - 12 - 6 - 3 - 1

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (15) and last element (1) of array...

Discarding last element (15) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 11Right Child > Current Node
Right Child: 14

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 11 - 14 - 9 - 5 - 13 - 7 - 8 - 4 - 1 - 2 - 12 - 6 - 3 - 15

After swapping...

Array is:

 - 14 - 11 - 1 - 9 - 5 - 13 - 7 - 8 - 4 - 1 - 2 - 12 - 6 - 3 - 15

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 13

Root is not the Largest in array

Before swapping...

Array is:

 - 14 - 11 - 1 - 9 - 5 - 13 - 7 - 8 - 4 - 1 - 2 - 12 - 6 - 3 - 15

After swapping...

Array is:

 - 14 - 11 - 13 - 9 - 5 - 1 - 7 - 8 - 4 - 1 - 2 - 12 - 6 - 3 - 15

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 12

Root is not the Largest in array

Before swapping...

Array is:

 - 14 - 11 - 13 - 9 - 5 - 1 - 7 - 8 - 4 - 1 - 2 - 12 - 6 - 3 - 15

After swapping...

Array is:

 - 14 - 11 - 13 - 9 - 5 - 12 - 7 - 8 - 4 - 1 - 2 - 1 - 6 - 3 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (14) and last element (3) of array...

Discarding last element (14) form heap...

Heapifying reduced array...


Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 11Right Child > Current Node
Right Child: 13

Root is not the Largest in array

Before swapping...

Array is:

 - 3 - 11 - 13 - 9 - 5 - 12 - 7 - 8 - 4 - 1 - 2 - 1 - 6 - 14 - 15

After swapping...

Array is:

 - 13 - 11 - 3 - 9 - 5 - 12 - 7 - 8 - 4 - 1 - 2 - 1 - 6 - 14 - 15

Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 12

Root is not the Largest in array

Before swapping...

Array is:

 - 13 - 11 - 3 - 9 - 5 - 12 - 7 - 8 - 4 - 1 - 2 - 1 - 6 - 14 - 15

After swapping...

Array is:

 - 13 - 11 - 12 - 9 - 5 - 3 - 7 - 8 - 4 - 1 - 2 - 1 - 6 - 14 - 15

Currently at node: 3
Comparing current node with left and right children
Right Child > Current Node
Right Child: 6

Root is not the Largest in array

Before swapping...

Array is:

 - 13 - 11 - 12 - 9 - 5 - 3 - 7 - 8 - 4 - 1 - 2 - 1 - 6 - 14 - 15

After swapping...

Array is:

 - 13 - 11 - 12 - 9 - 5 - 6 - 7 - 8 - 4 - 1 - 2 - 1 - 3 - 14 - 15

Currently at node: 3
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (13) and last element (3) of array...

Discarding last element (13) form heap...

Heapifying reduced array...


Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 11Right Child > Current Node
Right Child: 12

Root is not the Largest in array

Before swapping...

Array is:

 - 3 - 11 - 12 - 9 - 5 - 6 - 7 - 8 - 4 - 1 - 2 - 1 - 13 - 14 - 15

After swapping...

Array is:

 - 12 - 11 - 3 - 9 - 5 - 6 - 7 - 8 - 4 - 1 - 2 - 1 - 13 - 14 - 15

Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 6Right Child > Current Node
Right Child: 7

Root is not the Largest in array

Before swapping...

Array is:

 - 12 - 11 - 3 - 9 - 5 - 6 - 7 - 8 - 4 - 1 - 2 - 1 - 13 - 14 - 15

After swapping...

Array is:

 - 12 - 11 - 7 - 9 - 5 - 6 - 3 - 8 - 4 - 1 - 2 - 1 - 13 - 14 - 15

Currently at node: 3
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (12) and last element (1) of array...

Discarding last element (12) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 11

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 11 - 7 - 9 - 5 - 6 - 3 - 8 - 4 - 1 - 2 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 11 - 1 - 7 - 9 - 5 - 6 - 3 - 8 - 4 - 1 - 2 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 9

Root is not the Largest in array

Before swapping...

Array is:

 - 11 - 1 - 7 - 9 - 5 - 6 - 3 - 8 - 4 - 1 - 2 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 11 - 9 - 7 - 1 - 5 - 6 - 3 - 8 - 4 - 1 - 2 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 8

Root is not the Largest in array

Before swapping...

Array is:

 - 11 - 9 - 7 - 1 - 5 - 6 - 3 - 8 - 4 - 1 - 2 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 11 - 9 - 7 - 8 - 5 - 6 - 3 - 1 - 4 - 1 - 2 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (11) and last element (2) of array...

Discarding last element (11) form heap...

Heapifying reduced array...


Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 9

Root is not the Largest in array

Before swapping...

Array is:

 - 2 - 9 - 7 - 8 - 5 - 6 - 3 - 1 - 4 - 1 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 9 - 2 - 7 - 8 - 5 - 6 - 3 - 1 - 4 - 1 - 11 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 8

Root is not the Largest in array

Before swapping...

Array is:

 - 9 - 2 - 7 - 8 - 5 - 6 - 3 - 1 - 4 - 1 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 9 - 8 - 7 - 2 - 5 - 6 - 3 - 1 - 4 - 1 - 11 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children
Right Child > Current Node
Right Child: 4

Root is not the Largest in array

Before swapping...

Array is:

 - 9 - 8 - 7 - 2 - 5 - 6 - 3 - 1 - 4 - 1 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 9 - 8 - 7 - 4 - 5 - 6 - 3 - 1 - 2 - 1 - 11 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (9) and last element (1) of array...

Discarding last element (9) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 8

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 8 - 7 - 4 - 5 - 6 - 3 - 1 - 2 - 9 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 8 - 1 - 7 - 4 - 5 - 6 - 3 - 1 - 2 - 9 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 4Right Child > Current Node
Right Child: 5

Root is not the Largest in array

Before swapping...

Array is:

 - 8 - 1 - 7 - 4 - 5 - 6 - 3 - 1 - 2 - 9 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 8 - 5 - 7 - 4 - 1 - 6 - 3 - 1 - 2 - 9 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (8) and last element (2) of array...

Discarding last element (8) form heap...

Heapifying reduced array...


Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 5Right Child > Current Node
Right Child: 7

Root is not the Largest in array

Before swapping...

Array is:

 - 2 - 5 - 7 - 4 - 1 - 6 - 3 - 1 - 8 - 9 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 7 - 5 - 2 - 4 - 1 - 6 - 3 - 1 - 8 - 9 - 11 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 6

Root is not the Largest in array

Before swapping...

Array is:

 - 7 - 5 - 2 - 4 - 1 - 6 - 3 - 1 - 8 - 9 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 7 - 5 - 6 - 4 - 1 - 2 - 3 - 1 - 8 - 9 - 11 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (7) and last element (1) of array...

Discarding last element (7) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 5Right Child > Current Node
Right Child: 6

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 5 - 6 - 4 - 1 - 2 - 3 - 7 - 8 - 9 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 6 - 5 - 1 - 4 - 1 - 2 - 3 - 7 - 8 - 9 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 2Right Child > Current Node
Right Child: 3

Root is not the Largest in array

Before swapping...

Array is:

 - 6 - 5 - 1 - 4 - 1 - 2 - 3 - 7 - 8 - 9 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 6 - 5 - 3 - 4 - 1 - 2 - 1 - 7 - 8 - 9 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (6) and last element (1) of array...

Discarding last element (6) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 5

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 5 - 3 - 4 - 1 - 2 - 6 - 7 - 8 - 9 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 5 - 1 - 3 - 4 - 1 - 2 - 6 - 7 - 8 - 9 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 4

Root is not the Largest in array

Before swapping...

Array is:

 - 5 - 1 - 3 - 4 - 1 - 2 - 6 - 7 - 8 - 9 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 5 - 4 - 3 - 1 - 1 - 2 - 6 - 7 - 8 - 9 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (5) and last element (2) of array...

Discarding last element (5) form heap...

Heapifying reduced array...


Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 4

Root is not the Largest in array

Before swapping...

Array is:

 - 2 - 4 - 3 - 1 - 1 - 5 - 6 - 7 - 8 - 9 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 4 - 2 - 3 - 1 - 1 - 5 - 6 - 7 - 8 - 9 - 11 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (4) and last element (1) of array...

Discarding last element (4) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 2Right Child > Current Node
Right Child: 3

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 2 - 3 - 1 - 4 - 5 - 6 - 7 - 8 - 9 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 3 - 2 - 1 - 1 - 4 - 5 - 6 - 7 - 8 - 9 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (3) and last element (1) of array...

Discarding last element (3) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 2

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 2 - 1 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 2 - 1 - 1 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (2) and last element (1) of array...

Discarding last element (2) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (1) and last element (1) of array...

Discarding last element (1) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node


After sorting...

Array is:

 - 1 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 11 - 12 - 13 - 14 - 15

MENU

1. Enter elements in array
2. Sort
3. Display array
4. Exit

Enter your choice: 1
Enter element 1: 1
Enter element 2: 2
Enter element 3: 3
Enter element 4: 4
Enter element 5: 5
Enter element 6: 6
Enter element 7: 7
Enter element 8: 8
Enter element 9: 9
Enter element 10: 10
Enter element 11: 11
Enter element 12: 12
Enter element 13: 13
Enter element 14: 14
Enter element 15: 15

Array is:

 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

MENU

1. Enter elements in array
2. Sort
3. Display array
4. Exit

Enter your choice: 2

Before sorting...

Array is:

 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 7
Comparing current node with left and right children
Left Child > Current Node
Left Child: 14Right Child > Current Node
Right Child: 15

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 1 - 2 - 3 - 4 - 5 - 6 - 15 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 7

Currently at node: 7
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 6
Comparing current node with left and right children
Left Child > Current Node
Left Child: 12Right Child > Current Node
Right Child: 13

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 2 - 3 - 4 - 5 - 6 - 15 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 7

After swapping...

Array is:

 - 1 - 2 - 3 - 4 - 5 - 13 - 15 - 8 - 9 - 10 - 11 - 12 - 6 - 14 - 7

Currently at node: 6
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 5
Comparing current node with left and right children
Left Child > Current Node
Left Child: 10Right Child > Current Node
Right Child: 11

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 2 - 3 - 4 - 5 - 13 - 15 - 8 - 9 - 10 - 11 - 12 - 6 - 14 - 7

After swapping...

Array is:

 - 1 - 2 - 3 - 4 - 11 - 13 - 15 - 8 - 9 - 10 - 5 - 12 - 6 - 14 - 7

Currently at node: 5
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 4
Comparing current node with left and right children
Left Child > Current Node
Left Child: 8Right Child > Current Node
Right Child: 9

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 2 - 3 - 4 - 11 - 13 - 15 - 8 - 9 - 10 - 5 - 12 - 6 - 14 - 7

After swapping...

Array is:

 - 1 - 2 - 3 - 9 - 11 - 13 - 15 - 8 - 4 - 10 - 5 - 12 - 6 - 14 - 7

Currently at node: 4
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 13Right Child > Current Node
Right Child: 15

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 2 - 3 - 9 - 11 - 13 - 15 - 8 - 4 - 10 - 5 - 12 - 6 - 14 - 7

After swapping...

Array is:

 - 1 - 2 - 15 - 9 - 11 - 13 - 3 - 8 - 4 - 10 - 5 - 12 - 6 - 14 - 7

Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 14

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 2 - 15 - 9 - 11 - 13 - 3 - 8 - 4 - 10 - 5 - 12 - 6 - 14 - 7

After swapping...

Array is:

 - 1 - 2 - 15 - 9 - 11 - 13 - 14 - 8 - 4 - 10 - 5 - 12 - 6 - 3 - 7

Currently at node: 3
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 9Right Child > Current Node
Right Child: 11

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 2 - 15 - 9 - 11 - 13 - 14 - 8 - 4 - 10 - 5 - 12 - 6 - 3 - 7

After swapping...

Array is:

 - 1 - 11 - 15 - 9 - 2 - 13 - 14 - 8 - 4 - 10 - 5 - 12 - 6 - 3 - 7

Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 10

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 11 - 15 - 9 - 2 - 13 - 14 - 8 - 4 - 10 - 5 - 12 - 6 - 3 - 7

After swapping...

Array is:

 - 1 - 11 - 15 - 9 - 10 - 13 - 14 - 8 - 4 - 2 - 5 - 12 - 6 - 3 - 7

Currently at node: 2
Comparing current node with left and right children

Heap property maintained at current node


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 11Right Child > Current Node
Right Child: 15

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 11 - 15 - 9 - 10 - 13 - 14 - 8 - 4 - 2 - 5 - 12 - 6 - 3 - 7

After swapping...

Array is:

 - 15 - 11 - 1 - 9 - 10 - 13 - 14 - 8 - 4 - 2 - 5 - 12 - 6 - 3 - 7

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 13Right Child > Current Node
Right Child: 14

Root is not the Largest in array

Before swapping...

Array is:

 - 15 - 11 - 1 - 9 - 10 - 13 - 14 - 8 - 4 - 2 - 5 - 12 - 6 - 3 - 7

After swapping...

Array is:

 - 15 - 11 - 14 - 9 - 10 - 13 - 1 - 8 - 4 - 2 - 5 - 12 - 6 - 3 - 7

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 3Right Child > Current Node
Right Child: 7

Root is not the Largest in array

Before swapping...

Array is:

 - 15 - 11 - 14 - 9 - 10 - 13 - 1 - 8 - 4 - 2 - 5 - 12 - 6 - 3 - 7

After swapping...

Array is:

 - 15 - 11 - 14 - 9 - 10 - 13 - 7 - 8 - 4 - 2 - 5 - 12 - 6 - 3 - 1

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (15) and last element (1) of array...

Discarding last element (15) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 11Right Child > Current Node
Right Child: 14

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 11 - 14 - 9 - 10 - 13 - 7 - 8 - 4 - 2 - 5 - 12 - 6 - 3 - 15

After swapping...

Array is:

 - 14 - 11 - 1 - 9 - 10 - 13 - 7 - 8 - 4 - 2 - 5 - 12 - 6 - 3 - 15

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 13

Root is not the Largest in array

Before swapping...

Array is:

 - 14 - 11 - 1 - 9 - 10 - 13 - 7 - 8 - 4 - 2 - 5 - 12 - 6 - 3 - 15

After swapping...

Array is:

 - 14 - 11 - 13 - 9 - 10 - 1 - 7 - 8 - 4 - 2 - 5 - 12 - 6 - 3 - 15

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 12

Root is not the Largest in array

Before swapping...

Array is:

 - 14 - 11 - 13 - 9 - 10 - 1 - 7 - 8 - 4 - 2 - 5 - 12 - 6 - 3 - 15

After swapping...

Array is:

 - 14 - 11 - 13 - 9 - 10 - 12 - 7 - 8 - 4 - 2 - 5 - 1 - 6 - 3 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (14) and last element (3) of array...

Discarding last element (14) form heap...

Heapifying reduced array...


Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 11Right Child > Current Node
Right Child: 13

Root is not the Largest in array

Before swapping...

Array is:

 - 3 - 11 - 13 - 9 - 10 - 12 - 7 - 8 - 4 - 2 - 5 - 1 - 6 - 14 - 15

After swapping...

Array is:

 - 13 - 11 - 3 - 9 - 10 - 12 - 7 - 8 - 4 - 2 - 5 - 1 - 6 - 14 - 15

Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 12

Root is not the Largest in array

Before swapping...

Array is:

 - 13 - 11 - 3 - 9 - 10 - 12 - 7 - 8 - 4 - 2 - 5 - 1 - 6 - 14 - 15

After swapping...

Array is:

 - 13 - 11 - 12 - 9 - 10 - 3 - 7 - 8 - 4 - 2 - 5 - 1 - 6 - 14 - 15

Currently at node: 3
Comparing current node with left and right children
Right Child > Current Node
Right Child: 6

Root is not the Largest in array

Before swapping...

Array is:

 - 13 - 11 - 12 - 9 - 10 - 3 - 7 - 8 - 4 - 2 - 5 - 1 - 6 - 14 - 15

After swapping...

Array is:

 - 13 - 11 - 12 - 9 - 10 - 6 - 7 - 8 - 4 - 2 - 5 - 1 - 3 - 14 - 15

Currently at node: 3
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (13) and last element (3) of array...

Discarding last element (13) form heap...

Heapifying reduced array...


Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 11Right Child > Current Node
Right Child: 12

Root is not the Largest in array

Before swapping...

Array is:

 - 3 - 11 - 12 - 9 - 10 - 6 - 7 - 8 - 4 - 2 - 5 - 1 - 13 - 14 - 15

After swapping...

Array is:

 - 12 - 11 - 3 - 9 - 10 - 6 - 7 - 8 - 4 - 2 - 5 - 1 - 13 - 14 - 15

Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 6Right Child > Current Node
Right Child: 7

Root is not the Largest in array

Before swapping...

Array is:

 - 12 - 11 - 3 - 9 - 10 - 6 - 7 - 8 - 4 - 2 - 5 - 1 - 13 - 14 - 15

After swapping...

Array is:

 - 12 - 11 - 7 - 9 - 10 - 6 - 3 - 8 - 4 - 2 - 5 - 1 - 13 - 14 - 15

Currently at node: 3
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (12) and last element (1) of array...

Discarding last element (12) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 11

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 11 - 7 - 9 - 10 - 6 - 3 - 8 - 4 - 2 - 5 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 11 - 1 - 7 - 9 - 10 - 6 - 3 - 8 - 4 - 2 - 5 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 9Right Child > Current Node
Right Child: 10

Root is not the Largest in array

Before swapping...

Array is:

 - 11 - 1 - 7 - 9 - 10 - 6 - 3 - 8 - 4 - 2 - 5 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 11 - 10 - 7 - 9 - 1 - 6 - 3 - 8 - 4 - 2 - 5 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 2Right Child > Current Node
Right Child: 5

Root is not the Largest in array

Before swapping...

Array is:

 - 11 - 10 - 7 - 9 - 1 - 6 - 3 - 8 - 4 - 2 - 5 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 11 - 10 - 7 - 9 - 5 - 6 - 3 - 8 - 4 - 2 - 1 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (11) and last element (1) of array...

Discarding last element (11) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 10

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 10 - 7 - 9 - 5 - 6 - 3 - 8 - 4 - 2 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 10 - 1 - 7 - 9 - 5 - 6 - 3 - 8 - 4 - 2 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 9

Root is not the Largest in array

Before swapping...

Array is:

 - 10 - 1 - 7 - 9 - 5 - 6 - 3 - 8 - 4 - 2 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 10 - 9 - 7 - 1 - 5 - 6 - 3 - 8 - 4 - 2 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 8

Root is not the Largest in array

Before swapping...

Array is:

 - 10 - 9 - 7 - 1 - 5 - 6 - 3 - 8 - 4 - 2 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 10 - 9 - 7 - 8 - 5 - 6 - 3 - 1 - 4 - 2 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (10) and last element (2) of array...

Discarding last element (10) form heap...

Heapifying reduced array...


Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 9

Root is not the Largest in array

Before swapping...

Array is:

 - 2 - 9 - 7 - 8 - 5 - 6 - 3 - 1 - 4 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 9 - 2 - 7 - 8 - 5 - 6 - 3 - 1 - 4 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 8

Root is not the Largest in array

Before swapping...

Array is:

 - 9 - 2 - 7 - 8 - 5 - 6 - 3 - 1 - 4 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 9 - 8 - 7 - 2 - 5 - 6 - 3 - 1 - 4 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children
Right Child > Current Node
Right Child: 4

Root is not the Largest in array

Before swapping...

Array is:

 - 9 - 8 - 7 - 2 - 5 - 6 - 3 - 1 - 4 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 9 - 8 - 7 - 4 - 5 - 6 - 3 - 1 - 2 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (9) and last element (2) of array...

Discarding last element (9) form heap...

Heapifying reduced array...


Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 8

Root is not the Largest in array

Before swapping...

Array is:

 - 2 - 8 - 7 - 4 - 5 - 6 - 3 - 1 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 8 - 2 - 7 - 4 - 5 - 6 - 3 - 1 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 4Right Child > Current Node
Right Child: 5

Root is not the Largest in array

Before swapping...

Array is:

 - 8 - 2 - 7 - 4 - 5 - 6 - 3 - 1 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 8 - 5 - 7 - 4 - 2 - 6 - 3 - 1 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (8) and last element (1) of array...

Discarding last element (8) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 5Right Child > Current Node
Right Child: 7

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 5 - 7 - 4 - 2 - 6 - 3 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 7 - 5 - 1 - 4 - 2 - 6 - 3 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 6

Root is not the Largest in array

Before swapping...

Array is:

 - 7 - 5 - 1 - 4 - 2 - 6 - 3 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 7 - 5 - 6 - 4 - 2 - 1 - 3 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (7) and last element (3) of array...

Discarding last element (7) form heap...

Heapifying reduced array...


Currently at node: 3
Comparing current node with left and right children
Left Child > Current Node
Left Child: 5Right Child > Current Node
Right Child: 6

Root is not the Largest in array

Before swapping...

Array is:

 - 3 - 5 - 6 - 4 - 2 - 1 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 6 - 5 - 3 - 4 - 2 - 1 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 3
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (6) and last element (1) of array...

Discarding last element (6) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 5

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 5 - 3 - 4 - 2 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 5 - 1 - 3 - 4 - 2 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 4

Root is not the Largest in array

Before swapping...

Array is:

 - 5 - 1 - 3 - 4 - 2 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 5 - 4 - 3 - 1 - 2 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (5) and last element (2) of array...

Discarding last element (5) form heap...

Heapifying reduced array...


Currently at node: 2
Comparing current node with left and right children
Left Child > Current Node
Left Child: 4

Root is not the Largest in array

Before swapping...

Array is:

 - 2 - 4 - 3 - 1 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 4 - 2 - 3 - 1 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 2
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (4) and last element (1) of array...

Discarding last element (4) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 2Right Child > Current Node
Right Child: 3

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 3 - 2 - 1 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (3) and last element (1) of array...

Discarding last element (3) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children
Left Child > Current Node
Left Child: 2

Root is not the Largest in array

Before swapping...

Array is:

 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

After swapping...

Array is:

 - 2 - 1 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node

Swapping first (2) and last element (1) of array...

Discarding last element (2) form heap...

Heapifying reduced array...


Currently at node: 1
Comparing current node with left and right children

Heap property maintained at current node


After sorting...

Array is:

 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

MENU

1. Enter elements in array
2. Sort
3. Display array
4. Exit

Enter your choice: 3

Array is:

 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15

MENU

1. Enter elements in array
2. Sort
3. Display array
4. Exit

Enter your choice: 4
